[{"C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\index.js":"1","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\reportWebVitals.js":"2","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\App.js":"3","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\backend\\stun.js":"4","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\backend\\firebase.js":"5","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\component\\Videochat.jsx":"6"},{"size":552,"mtime":1660658019345,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1660658019346,"results":"9","hashOfConfig":"8"},{"size":8284,"mtime":1660678265378,"results":"10","hashOfConfig":"8"},{"size":224,"mtime":1660683022875,"results":"11","hashOfConfig":"8"},{"size":263,"mtime":1660683394832,"results":"12","hashOfConfig":"8"},{"size":6647,"mtime":1660683436096,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"frzr5d",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\index.js",[],[],[],"C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\App.js",["35"],[],"// import { useRef, useState } from \"react\";\r\n\r\n// import firebase from \"firebase/compat/app\";\r\n// import \"firebase/compat/firestore\";\r\n\r\n// import { ReactComponent as HangupIcon } from \"./icons/hangup.svg\";\r\n// import { ReactComponent as MoreIcon } from \"./icons/more-vertical.svg\";\r\n// import { ReactComponent as CopyIcon } from \"./icons/copy.svg\";\r\n\r\n// import \"./App.css\";\r\n\r\n// // Initialize Firebase\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyB0Px6dHZzp8U2PiqSME8vIBG9Zr69gtnQ\",\r\n//   authDomain: \"gcollab-109ba.firebaseapp.com\",\r\n//   projectId: \"gcollab-109ba\",\r\n//   storageBucket: \"gcollab-109ba.appspot.com\",\r\n//   messagingSenderId: \"871201771773\",\r\n//   appId: \"1:871201771773:web:63dd9d5b0307b66e4a2e94\",\r\n//   measurementId: \"G-Y1QGH1C4TS\",\r\n// };\r\n\r\n// if (!firebase.apps.length) {\r\n//   firebase.initializeApp(firebaseConfig);\r\n// }\r\n\r\n// const firestore = firebase.firestore();\r\n\r\n// // Initialize WebRTC\r\n// const servers = {\r\n//   iceServers: [\r\n//     {\r\n//       urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\"],\r\n//     },\r\n//   ],\r\n//   iceCandidatePoolSize: 10,\r\n// };\r\n\r\n// const pc = new RTCPeerConnection(servers);\r\n\r\n// function App() {\r\n//   const [currentPage, setCurrentPage] = useState(\"home\");\r\n//   const [joinCode, setJoinCode] = useState(\"\");\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       aaa aa\r\n//       {currentPage === \"home\" ? (\r\n//         <Menu\r\n//           joinCode={joinCode}\r\n//           setJoinCode={setJoinCode}\r\n//           setPage={setCurrentPage}\r\n//         />\r\n//       ) : (\r\n//         <Videos mode={currentPage} callId={joinCode} setPage={setCurrentPage} />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function Menu({ joinCode, setJoinCode, setPage }) {\r\n//   return (\r\n//     <div className=\"home\">\r\n//       <div className=\"create box\">\r\n//         <button onClick={() => setPage(\"create\")}>Create Call</button>\r\n//       </div>\r\n\r\n//       <div className=\"answer box\">\r\n//         <input\r\n//           value={joinCode}\r\n//           onChange={(e) => setJoinCode(e.target.value)}\r\n//           placeholder=\"Join with code\"\r\n//         />\r\n//         <button onClick={() => setPage(\"join\")}>Answer</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function Videos({ mode, callId, setPage }) {\r\n//   const [webcamActive, setWebcamActive] = useState(false);\r\n//   const [roomId, setRoomId] = useState(callId);\r\n\r\n//   const localRef = useRef();\r\n//   const remoteRef = useRef();\r\n\r\n//   const setupSources = async () => {\r\n//     const localStream = await navigator.mediaDevices.getUserMedia({\r\n//       video: true,\r\n//       audio: true,\r\n//     });\r\n//     const remoteStream = new MediaStream();\r\n\r\n//     localStream.getTracks().forEach((track) => {\r\n//       pc.addTrack(track, localStream);\r\n//     });\r\n\r\n//     pc.ontrack = (event) => {\r\n//       event.streams[0].getTracks().forEach((track) => {\r\n//         remoteStream.addTrack(track);\r\n//       });\r\n//     };\r\n\r\n//     localRef.current.srcObject = localStream;\r\n//     remoteRef.current.srcObject = remoteStream;\r\n\r\n//     setWebcamActive(true);\r\n\r\n//     if (mode === \"create\") {\r\n//       const callDoc = firestore.collection(\"calls\").doc();\r\n//       const offerCandidates = callDoc.collection(\"offerCandidates\");\r\n//       const answerCandidates = callDoc.collection(\"answerCandidates\");\r\n\r\n//       setRoomId(callDoc.id);\r\n\r\n//       pc.onicecandidate = (event) => {\r\n//         event.candidate && offerCandidates.add(event.candidate.toJSON());\r\n//       };\r\n\r\n//       const offerDescription = await pc.createOffer();\r\n//       await pc.setLocalDescription(offerDescription);\r\n\r\n//       const offer = {\r\n//         sdp: offerDescription.sdp,\r\n//         type: offerDescription.type,\r\n//       };\r\n\r\n//       await callDoc.set({ offer });\r\n\r\n//       callDoc.onSnapshot((snapshot) => {\r\n//         const data = snapshot.data();\r\n//         if (!pc.currentRemoteDescription && data?.answer) {\r\n//           const answerDescription = new RTCSessionDescription(data.answer);\r\n//           pc.setRemoteDescription(answerDescription);\r\n//         }\r\n//       });\r\n\r\n//       answerCandidates.onSnapshot((snapshot) => {\r\n//         snapshot.docChanges().forEach((change) => {\r\n//           if (change.type === \"added\") {\r\n//             const candidate = new RTCIceCandidate(change.doc.data());\r\n//             pc.addIceCandidate(candidate);\r\n//           }\r\n//         });\r\n//       });\r\n//     } else if (mode === \"join\") {\r\n//       const callDoc = firestore.collection(\"calls\").doc(callId);\r\n//       const answerCandidates = callDoc.collection(\"answerCandidates\");\r\n//       const offerCandidates = callDoc.collection(\"offerCandidates\");\r\n\r\n//       pc.onicecandidate = (event) => {\r\n//         event.candidate && answerCandidates.add(event.candidate.toJSON());\r\n//       };\r\n\r\n//       const callData = (await callDoc.get()).data();\r\n\r\n//       const offerDescription = callData.offer;\r\n//       await pc.setRemoteDescription(\r\n//         new RTCSessionDescription(offerDescription)\r\n//       );\r\n\r\n//       const answerDescription = await pc.createAnswer();\r\n//       await pc.setLocalDescription(answerDescription);\r\n\r\n//       const answer = {\r\n//         type: answerDescription.type,\r\n//         sdp: answerDescription.sdp,\r\n//       };\r\n\r\n//       await callDoc.update({ answer });\r\n\r\n//       offerCandidates.onSnapshot((snapshot) => {\r\n//         snapshot.docChanges().forEach((change) => {\r\n//           if (change.type === \"added\") {\r\n//             let data = change.doc.data();\r\n//             pc.addIceCandidate(new RTCIceCandidate(data));\r\n//           }\r\n//         });\r\n//       });\r\n//     }\r\n\r\n//     pc.onconnectionstatechange = (event) => {\r\n//       if (pc.connectionState === \"disconnected\") {\r\n//         hangUp();\r\n//       }\r\n//     };\r\n//   };\r\n\r\n//   const hangUp = async () => {\r\n//     pc.close();\r\n\r\n//     if (roomId) {\r\n//       let roomRef = firestore.collection(\"calls\").doc(roomId);\r\n//       await roomRef\r\n//         .collection(\"answerCandidates\")\r\n//         .get()\r\n//         .then((querySnapshot) => {\r\n//           querySnapshot.forEach((doc) => {\r\n//             doc.ref.delete();\r\n//           });\r\n//         });\r\n//       await roomRef\r\n//         .collection(\"offerCandidates\")\r\n//         .get()\r\n//         .then((querySnapshot) => {\r\n//           querySnapshot.forEach((doc) => {\r\n//             doc.ref.delete();\r\n//           });\r\n//         });\r\n\r\n//       await roomRef.delete();\r\n//     }\r\n\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"videos\">\r\n//       <video ref={localRef} autoPlay playsInline className=\"local\" muted />\r\n//       <video ref={remoteRef} autoPlay playsInline className=\"remote\" />\r\n\r\n//       <div className=\"buttonsContainer\">\r\n//         <button\r\n//           onClick={hangUp}\r\n//           disabled={!webcamActive}\r\n//           className=\"hangup button\"\r\n//         >\r\n//           <HangupIcon />\r\n//         </button>\r\n//         <div tabIndex={0} role=\"button\" className=\"more button\">\r\n//           {roomId}\r\n//           <MoreIcon />\r\n//           <div className=\"popover\">\r\n//             <button\r\n//               onClick={() => {\r\n//                 navigator.clipboard.writeText(roomId);\r\n//               }}\r\n//             >\r\n//               <CopyIcon /> Copy joining code\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {!webcamActive && (\r\n//         <div className=\"modalContainer\">\r\n//           <div className=\"modal\">\r\n//             <h3>Turn on your camera and microphone and start the call</h3>\r\n//             <div className=\"container\">\r\n//               <button onClick={() => setPage(\"home\")} className=\"secondary\">\r\n//                 Cancel\r\n//               </button>\r\n//               <button onClick={setupSources}>Start</button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Videochat from \"./component/Videochat\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Videochat></Videochat>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\backend\\stun.js",["36"],[],"const servers = {\r\n  iceServers: [\r\n    {\r\n      urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\"],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nexport const pc = new RTCPeerConnection(servers);\r\n","C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\backend\\firebase.js",[],[],"C:\\Users\\thech\\Documents\\Summer 2022\\Headstart\\GroupCollab\\client\\src\\component\\Videochat.jsx",[],[],{"ruleId":"37","severity":1,"message":"38","line":265,"column":8,"nodeType":"39","messageId":"40","endLine":265,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":1,"column":7,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'server' is assigned a value but never used."]